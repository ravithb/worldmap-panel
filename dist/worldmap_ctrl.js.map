{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","Colors","panelDefaults","maxDataPoints","mapCenter","mapCenterLatitude","mapCenterLongitude","initialZoom","valueName","circleMinSize","circleMaxSize","boundsChangeTriggerDelta","locationData","thresholds","colors","unitSingle","unitPlural","showLegend","mouseWheelZoom","showTrail","showAsAntPath","antPathDelay","useCustomAntPathColor","antPathColor","antPathPulseColor","extraLineColors","extraLineSecondaryColors","mapTileServer","esMetric","decimals","hideEmpty","hideZero","stickyLabels","tableQueryOptions","queryType","geohashField","latitudeField","longitudeField","metricField","markerField","customLabelField","urlField","urlFollowOptions","openInNewWindow","useHeadlessWindow","geoJsonOptions","popupContentField","mapCenters","WorldmapCtrl","$scope","$injector","contextSrv","datasourceSrv","variableSrv","context","defaults","panel","tileServer","currentTileServer","setMapProvider","dataFormatter","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","loadLocationDataFromFile","user","lightTheme","setMapSaturationClass","map","remove","render","saturationClass","reload","snapshotLocationData","locations","jsonpUrl","jsonpCallback","window","$","ajax","type","url","contentType","dataType","success","res","jsonUrl","getJSON","then","reloadLocations","refresh","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","series","setJsonValues","setGeoJsonValues","seriesHandler","setValues","updateThresholdData","length","centerOnLastGeoHash","last","locationLatitude","locationLongitude","setNewMapCenter","snapshotData","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","mapCenterMoved","setZoom","removeLegend","setMouseWheelZoom","clearCircles","setShowAsAntPath","setAntPathOptions","pathColor1","pathColor2","setPathColors","push","random","removed","pop","setExtraLineColors","setExtraLineSecondaryColors","legend","update","split","strValue","Number","trim","size","newColor","boundsObj","maxChangeDelta","console","log","boundsJson","boundsVar","find","variables","check","name","setOptionAsCurrent","text","value","variableUpdated","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\nimport './css/worldmap-panel.css!';\nimport Colors from './colors';\n\nconst panelDefaults = {\n  maxDataPoints: 1,\n  mapCenter: '(0°, 0°)',\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  valueName: 'total',\n  circleMinSize: 2,\n  circleMaxSize: 30,\n  boundsChangeTriggerDelta: 0.5,\n  locationData: 'countries',\n  thresholds: '0,10',\n  colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n  unitSingle: '',\n  unitPlural: '',\n  showLegend: true,\n  mouseWheelZoom: false,\n  showTrail: false,\n  showAsAntPath: false,\n  antPathDelay: 400,\n  useCustomAntPathColor: false,\n  antPathColor: 'rgba(50, 172, 45, 0.97)',\n  antPathPulseColor: '#FFFFFF',\n  extraLineColors: ['#ff4d4d', '#1aff8c'],\n  extraLineSecondaryColors: ['#eeeeee', '#eeeeee'],\n  mapTileServer: 'CartoDB',\n  esMetric: 'Count',\n  decimals: 0,\n  hideEmpty: false,\n  hideZero: false,\n  stickyLabels: false,\n  tableQueryOptions: {\n    queryType: 'geohash',\n    geohashField: 'geohash',\n    latitudeField: 'latitude',\n    longitudeField: 'longitude',\n    metricField: 'metric',\n    markerField: 'marker',\n    customLabelField: 'label',\n    urlField: 'url'\n  },\n  urlFollowOptions: {\n    openInNewWindow: true,\n    useHeadlessWindow: true\n  },\n  geoJsonOptions: {\n    popupContentField: 'Name'\n  }\n};\n\nconst mapCenters = {\n  '(0°, 0°)': {mapCenterLatitude: 0, mapCenterLongitude: 0},\n  'North America': {mapCenterLatitude: 40, mapCenterLongitude: -100},\n  'Europe': {mapCenterLatitude: 46, mapCenterLongitude: 14},\n  'West Asia': {mapCenterLatitude: 26, mapCenterLongitude: 53},\n  'SE Asia': {mapCenterLatitude: 10, mapCenterLongitude: 106},\n  'Last GeoHash': {mapCenterLatitude: 0, mapCenterLongitude: 0}\n};\n\nexport default class WorldmapCtrl extends MetricsPanelCtrl {\n  currentTileServer;\n  context;\n\n  constructor($scope, $injector, contextSrv, datasourceSrv, variableSrv) {\n    super($scope, $injector);\n    this.context = contextSrv;\n    _.defaults(this.panel, panelDefaults);\n    this.tileServer = this.panel.mapTileServer;\n    this.currentTileServer = this.panel.mapTileServer;\n    this.setMapProvider(contextSrv);\n    this.variableSrv = variableSrv;\n\n    this.dataFormatter = new DataFormatter(this, kbn);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n\n    this.loadLocationDataFromFile();\n  }\n\n  setMapProvider(contextSrv) {\n    switch (this.panel.mapTileServer) {\n      case 'Open Street Maps':\n        this.tileServer = 'Open Street Maps';\n        break;\n      case 'Stamen Maps':\n        this.tileServer = 'Stamen Maps';\n        break;\n      case 'CartoDB':\n      default:\n        this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n        break;\n    }\n    this.setMapSaturationClass();\n  }\n\n  changeBoundsChangeTriggerDelta() {\n    if (this.panel.boundsChangeTriggerDelta < 0 || this.panel.boundsChangeTriggerDelta > 3) {\n      this.panel.boundsChangeTriggerDelta = 0.5;\n    }\n  }\n\n  changeMapProvider() {\n    if (this.panel.mapTileServer !== this.currentTileServer) {\n      this.setMapProvider(this.context);\n      if (this.map) {\n        this.map.remove();\n        this.map = null;\n      }\n\n      this.currentTileServer = this.tileServer;\n      this.render();\n    }\n  }\n\n  setMapSaturationClass() {\n    if (this.tileServer === 'CartoDB Dark') {\n      this.saturationClass = 'map-darken';\n    } else {\n      this.saturationClass = '';\n    }\n  }\n\n  loadLocationDataFromFile(reload) {\n    if (this.map && !reload) return;\n\n    if (this.panel.snapshotLocationData) {\n      this.locations = this.panel.snapshotLocationData;\n      return;\n    }\n\n    if (this.panel.locationData === 'jsonp endpoint') {\n      if (!this.panel.jsonpUrl || !this.panel.jsonpCallback) return;\n\n      window.$.ajax({\n        type: 'GET',\n        url: this.panel.jsonpUrl + '?callback=?',\n        contentType: 'application/json',\n        jsonpCallback: this.panel.jsonpCallback,\n        dataType: 'jsonp',\n        success: (res) => {\n          this.locations = res;\n          this.render();\n        }\n      });\n    } else if (this.panel.locationData === 'json endpoint') {\n      if (!this.panel.jsonUrl) return;\n\n      window.$.getJSON(this.panel.jsonUrl).then((res) => {\n        this.locations = res;\n        this.render();\n      });\n    } else if (this.panel.locationData === 'table' || this.panel.locationData === 'geo json') {\n      // .. Do nothing\n    } else if (this.panel.locationData !== 'geohash' && this.panel.locationData !== 'json result') {\n      window.$.getJSON('public/plugins/grafana-custom-worldmap-panel/data/' + this.panel.locationData + '.json')\n        .then(this.reloadLocations.bind(this));\n    }\n  }\n\n  reloadLocations(res) {\n    this.locations = res;\n    this.refresh();\n  }\n\n  showTableGeohashOptions() {\n    return this.panel.locationData === 'table' && this.panel.tableQueryOptions.queryType === 'geohash';\n  }\n\n  showTableCoordinateOptions() {\n    return this.panel.locationData === 'table' && this.panel.tableQueryOptions.queryType === 'coordinates';\n  }\n\n  onPanelTeardown() {\n    if (this.map) this.map.remove();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Worldmap', 'public/plugins/grafana-custom-worldmap-panel/partials/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    if (!dataList) return;\n\n    if (this.dashboard.snapshot && this.locations) {\n      this.panel.snapshotLocationData = this.locations;\n    }\n\n    const data = [];\n\n    if (this.panel.locationData === 'geohash') {\n      this.dataFormatter.setGeohashValues(dataList, data);\n    } else if (this.panel.locationData === 'table') {\n      const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\n      this.dataFormatter.setTableValues(tableData, data);\n    } else if (this.panel.locationData === 'json result') {\n      this.series = dataList;\n      this.dataFormatter.setJsonValues(data);\n    } else if (this.panel.locationData === 'geo json') {\n      this.series = dataList;\n      this.dataFormatter.setGeoJsonValues(data);\n    } else {\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.dataFormatter.setValues(data);\n    }\n    this.data = data;\n\n    this.updateThresholdData();\n\n    if (this.data && this.data.length > 0 &&\n      this.data[0].length && this.panel.mapCenter === 'Last GeoHash') {\n      this.centerOnLastGeoHash();\n    } else {\n      this.render();\n    }\n  }\n\n  centerOnLastGeoHash() {\n    mapCenters[this.panel.mapCenter].mapCenterLatitude = _.last(this.data[0]).locationLatitude;\n    mapCenters[this.panel.mapCenter].mapCenterLongitude = _.last(this.data[0]).locationLongitude;\n    this.setNewMapCenter();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setNewMapCenter() {\n    if (this.panel.mapCenter !== 'custom') {\n      this.panel.mapCenterLatitude = mapCenters[this.panel.mapCenter].mapCenterLatitude;\n      this.panel.mapCenterLongitude = mapCenters[this.panel.mapCenter].mapCenterLongitude;\n    }\n    this.mapCenterMoved = true;\n    this.render();\n  }\n\n  setZoom() {\n    this.map.setZoom(this.panel.initialZoom || 1);\n  }\n\n  toggleLegend() {\n    if (!this.panel.showLegend) {\n      this.map.removeLegend();\n    }\n    this.render();\n  }\n\n  toggleMouseWheelZoom() {\n    this.map.setMouseWheelZoom();\n    this.render();\n  }\n\n  toggleStickyLabels() {\n    this.map.clearCircles();\n    this.render();\n  }\n\n  toggleShowTrail() {\n    this.map.showTrail(this.panel.showTrail);\n  }\n\n  toggleShowAsAntPath() {\n    this.map.setShowAsAntPath(this.panel.showAsAntPath);\n  }\n\n  changeAntpathOptions() {\n    this.map.setAntPathOptions(this.panel.antPathDelay,\n      this.panel.useCustomAntPathColor,\n      this.panel.antPathColor,\n      this.panel.antPathPulseColor);\n    this.render();\n  }\n\n  changePathColors() {\n    if (this.panel.pathColor1 && this.panel.pathColor2) {\n      this.map.setPathColors(this.panel.pathColor1, this.panel.pathColor2);\n    }\n  }\n\n  addExtraLineColor() {\n    this.panel.extraLineColors.push(Colors.random());\n    this.panel.extraLineSecondaryColors.push(Colors.random());\n    this.render();\n  }\n\n  removeLastExtraLineColor() {\n    if (this.panel.extraLineColors.length > 0) {\n      const removed = this.panel.extraLineColors.pop();\n      if (removed && this.panel.extraLineSecondaryColors.length > 0) {\n        this.panel.extraLineSecondaryColors.pop();\n      }\n      this.render();\n    }\n  }\n\n  changeExtraLineColors() {\n    this.map.setExtraLineColors(this.panel.extraLineColors);\n  }\n\n  changeExtraLineSecondaryColors() {\n    this.map.setExtraLineSecondaryColors(this.panel.extraLineSecondaryColors);\n  }\n\n  changeThresholds() {\n    this.updateThresholdData();\n    this.map.legend.update();\n    this.render();\n  }\n\n  updateThresholdData() {\n    if (!this.data || this.data.length === 0) {\n      return;\n    }\n    this.data[0].thresholds = this.panel.thresholds.split(',').map((strValue) => {\n      return Number(strValue.trim());\n    });\n    while (_.size(this.panel.colors) > _.size(this.data[0].thresholds) + 1) {\n      // too many colors. remove the last one.\n      this.panel.colors.pop();\n    }\n    while (_.size(this.panel.colors) < _.size(this.data[0].thresholds) + 1) {\n      // not enough colors. add one.\n      const newColor = 'rgba(50, 172, 45, 0.97)';\n      this.panel.colors.push(newColor);\n    }\n  }\n\n  changeLocationData() {\n    this.loadLocationDataFromFile(true);\n\n    if (this.panel.locationData === 'geohash') {\n      this.render();\n    }\n  }\n\n  onBoundsChange(boundsObj) {\n    if (boundsObj.maxChangeDelta < 0.5) {\n      console.log('bounds change delta %o is too small to update variable', boundsObj.maxChangeDelta);\n      return;\n    }\n    const boundsJson = boundsObj;\n    const boundsVar = _.find(this.variableSrv.variables, (check) => {\n      return check.name === 'bounds';\n    });\n    if (boundsVar) {\n      this.variableSrv.setOptionAsCurrent(boundsVar, {\n        text: boundsJson,\n        value: boundsJson\n      });\n      this.variableSrv.variableUpdated(boundsVar, true);\n      // console.log('variable set to %o', boundsJson);\n      // console.log(boundsVar);\n      // console.log(this);\n    } else {\n      console.log(\"no variable 'bounds'\");\n    }\n  }\n\n/* eslint class-methods-use-this: 0 */\n  notEmpty(url) {\n    return (url && url.trim().length > 0);\n  }\n\n/* eslint class-methods-use-this: 0 */\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nWorldmapCtrl.templateUrl = 'module.html';\n"]}