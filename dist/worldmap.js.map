{"version":3,"sources":["../src/worldmap.js"],"names":["_","L","antPath","tileServers","url","attribution","subdomains","WorldMap","ctrl","mapContainer","circles","lineCoords","lineColor","first","panel","colors","drawTrail","showTrail","showAsAntPath","createMap","mapCenter","window","latLng","parseFloat","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoom","parseInt","initialZoom","setMouseWheelZoom","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","addTo","legend","control","position","onAdd","_div","DomUtil","create","update","thresholds","data","legendHtml","index","length","innerHTML","locations","sort","dataPoints","isEqual","filter","o","hideEmpty","isNil","value","hideZero","circlesLayer","clearLayers","removeCircles","filterEmptyAndZeroValues","needToRedrawCircles","clearCircles","createCircles","clearPolyLine","drawPolyLine","updateCircles","forEach","dataPoint","locationName","c","createCircle","getColor","push","getLatLng","lat","lng","addCircles","linesLayer","removeLines","console","log","polyline","color","circle","find","cir","options","location","key","setRadius","calcCircleSize","setStyle","fillColor","fillOpacity","unbindPopup","createPopup","valueRounded","circleMarker","locationLatitude","locationLongitude","radius","dataPointValue","circleMinSize","circleMaxSize","valueRange","dataFactor","lowestValue","circleSizeRange","unit","unitSingular","unitPlural","label","trim","bindPopup","point","stickyLabels","on","onMouseOver","evt","layer","target","bringToFront","openPopup","onMouseOut","closePopup","invalidateSize","panTo","mapCenterMoved","remove","mouseWheelZoom","scrollWheelZoom","disable","enable","layerGroup","removeLayer","flag","zoomFactor","setZoom","removeLegend"],"mappings":"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","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\nimport {antPath} from './libs/leaflet-ant-path';\n\nconst tileServers = {\n  'CartoDB Positron': { url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'}\n};\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.circles = [];\n    this.lineCoords = [];\n    this.lineColor = _.first(this.ctrl.panel.colors);\n    this.drawTrail = this.ctrl.panel.showTrail;\n    this.showAsAntPath = true;\n    return this.createMap();\n  }\n\n  createMap() {\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    this.map = window.L.map(this.mapContainer, { worldCopyJump: true, center: mapCenter, zoom: parseInt(this.ctrl.panel.initialZoom, 10) || 1 });\n    this.setMouseWheelZoom();\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map);\n  }\n\n  createLegend() {\n    this.legend = window.L.control({position: 'bottomleft'});\n    this.legend.onAdd = () => {\n      this.legend._div = window.L.DomUtil.create('div', 'info legend');\n      this.legend.update();\n      return this.legend._div;\n    };\n\n    this.legend.update = () => {\n      const thresholds = this.ctrl.data.thresholds;\n      let legendHtml = '';\n      legendHtml += '<div class=\"legend-item\"><i style=\"background:' + this.ctrl.panel.colors[0] + '\"></i> ' +\n          '&lt; ' + thresholds[0] + '</div>';\n      for (let index = 0; index < thresholds.length; index += 1) {\n        legendHtml +=\n          '<div class=\"legend-item\"><i style=\"background:' + this.ctrl.panel.colors[index + 1] + '\"></i> ' +\n          thresholds[index] + (thresholds[index + 1] ? '&ndash;' + thresholds[index + 1] + '</div>' : '+');\n      }\n      this.legend._div.innerHTML = legendHtml;\n    };\n    this.legend.addTo(this.map);\n  }\n\n  needToRedrawCircles(data) {\n    if (this.circles.length === 0 && data.length > 0) return true;\n\n    if (this.circles.length !== data.length) return true;\n    const locations = _.map(_.map(this.circles, 'options'), 'location').sort();\n    const dataPoints = _.map(data, 'key').sort();\n    return !_.isEqual(locations, dataPoints);\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      this.circles = [];\n    }\n  }\n\n  drawCircles() {\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    if (this.needToRedrawCircles(data)) {\n      this.clearCircles();\n      this.createCircles(data);\n      this.clearPolyLine();\n      if (this.drawTrail) {\n        this.drawPolyLine();\n      }\n    } else {\n      this.updateCircles(data);\n    }\n  }\n\n  createCircles(data) {\n    const circles = [];\n    data.forEach((dataPoint) => {\n      if (!dataPoint.locationName) return;\n      const c = this.createCircle(dataPoint);\n      this.lineColor = this.getColor(dataPoint.value);\n      if (this.drawTrail) {\n        this.lineCoords.push([c.getLatLng().lat, c.getLatLng().lng]);\n      }\n      circles.push(c);\n    });\n    this.circlesLayer = this.addCircles(circles);\n    this.circles = circles;\n  }\n\n  clearPolyLine() {\n    if (this.linesLayer) {\n      this.removeLines(this.linesLayer);\n    }\n  }\n\n  drawPolyLine() {\n    console.log(\"Coords : %o\",this.lineCoords);\n    if(this.showAsAntPath){\n      this.linesLayer = window.L.polyline.antPath(this.lineCoords, {\n        'delay': 400,\n        'dashArray': [10, 20],\n        'weight': 5,\n        'color': this.lineColor,\n        'pulseColor': '#FFFFFF',\n        'paused': false,\n        'reverse': false\n      }).addTo(this.map);\n    }else{\n      this.linesLayer = window.L.polyline(this.lineCoords, {\n        color: this.lineColor\n      }).addTo(this.map);\n    }\n    return this.linesLayer;\n  }\n\n  updateCircles(data) {\n    data.forEach((dataPoint) => {\n      if (!dataPoint.locationName) return;\n\n      const circle = _.find(this.circles, (cir) => { return cir.options.location === dataPoint.key; });\n\n      if (circle) {\n        circle.setRadius(this.calcCircleSize(dataPoint.value || 0));\n        circle.setStyle({\n          color: this.getColor(dataPoint.value),\n          fillColor: this.getColor(dataPoint.value),\n          fillOpacity: 0.5,\n          location: dataPoint.key,\n        });\n        circle.unbindPopup();\n        this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const circle = window.L.circleMarker([dataPoint.locationLatitude, dataPoint.locationLongitude], {\n      radius: this.calcCircleSize(dataPoint.value || 0),\n      color: this.getColor(dataPoint.value),\n      fillColor: this.getColor(dataPoint.value),\n      fillOpacity: 0.5,\n      location: dataPoint.key\n    });\n\n    this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n    return circle;\n  }\n\n  calcCircleSize(dataPointValue) {\n    const circleMinSize = parseInt(this.ctrl.panel.circleMinSize, 10) || 2;\n    const circleMaxSize = parseInt(this.ctrl.panel.circleMaxSize, 10) || 30;\n\n    if (this.ctrl.data.valueRange === 0) {\n      return circleMaxSize;\n    }\n\n    const dataFactor = (dataPointValue - this.ctrl.data.lowestValue) / this.ctrl.data.valueRange;\n    const circleSizeRange = circleMaxSize - circleMinSize;\n\n    return (circleSizeRange * dataFactor) + circleMinSize;\n  }\n\n  createPopup(circle, locationName, value) {\n    const unit = value && value === 1 ? this.ctrl.panel.unitSingular : this.ctrl.panel.unitPlural;\n    const label = (locationName + ': ' + value + ' ' + (unit || '')).trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      const layer = evt.target;\n      layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  getColor(value) {\n    for (let index = this.ctrl.data.thresholds.length; index > 0; index -= 1) {\n      if (value >= this.ctrl.data.thresholds[index - 1]) {\n        return this.ctrl.panel.colors[index];\n      }\n    }\n    return _.first(this.ctrl.panel.colors);\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.remove(this.map);\n    this.legend = null;\n  }\n\n  setMouseWheelZoom() {\n    if (!this.ctrl.panel.mouseWheelZoom) {\n      this.map.scrollWheelZoom.disable();\n    } else {\n      this.map.scrollWheelZoom.enable();\n    }\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  removeLines() {\n    this.map.removeLayer(this.linesLayer);\n  }\n\n  showTrail(flag) {\n    console.log('CTRL: setTrail %o', flag);\n    this.drawTrail = flag;\n    if (!this.drawTrail) {\n      this.clearPolyLine();\n    }\n  }\n\n  setShowAsAntPath(flag){\n    this.showAsAntPath = flag;\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n  remove() {\n    this.circles = [];\n    if (this.circlesLayer) this.removeCircles();\n    if (this.legend) this.removeLegend();\n    this.map.remove();\n  }\n}\n"]}